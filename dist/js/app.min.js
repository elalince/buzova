/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/app.js":
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _modules_functions_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modules/functions.js */ \"./src/js/modules/functions.js\");\n\n\n_modules_functions_js__WEBPACK_IMPORTED_MODULE_0__.showNav();\n_modules_functions_js__WEBPACK_IMPORTED_MODULE_0__.universities();\n_modules_functions_js__WEBPACK_IMPORTED_MODULE_0__.factsPopup();\n_modules_functions_js__WEBPACK_IMPORTED_MODULE_0__.mainSlider();\n\n\n\n\n\n//# sourceURL=webpack://name/./src/js/app.js?\n}");

/***/ }),

/***/ "./src/js/modules/functions.js":
/*!*************************************!*\
  !*** ./src/js/modules/functions.js ***!
  \*************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   factsPopup: () => (/* binding */ factsPopup),\n/* harmony export */   mainSlider: () => (/* binding */ mainSlider),\n/* harmony export */   scrollTo: () => (/* binding */ scrollTo),\n/* harmony export */   showNav: () => (/* binding */ showNav),\n/* harmony export */   universities: () => (/* binding */ universities)\n/* harmony export */ });\n\nfunction showNav() {\n\n    const navbarBtn = document.querySelector( '.navbar-btn');\n    const navbarList = document.querySelector( '.navbar');\n    const navbarHeader = document.querySelector( 'header');\n    const navbarLink = document.querySelectorAll( '.navbar__item');\n\n    $(navbarBtn).on('click', function() {\n        $(navbarBtn).toggleClass('navbar-btn_close')\n        $(navbarList).toggleClass('navbar_open')\n        $(navbarHeader).toggleClass('nav-open')\n    });\n    $(navbarLink).on('click', function() {\n        $(navbarBtn).removeClass('navbar-btn_close')\n        $(navbarList).removeClass('navbar_open')\n        $(navbarHeader).removeClass('nav-open')\n    });\n}\nfunction scrollTo () {\n    const anchors = document.querySelectorAll('a[href*=\"#\"]')\n\n    for (let anchor of anchors) {\n        anchor.addEventListener('click', function (e) {\n            e.preventDefault()\n\n            const blockID = anchor.getAttribute('href').substr(1)\n\n            document.getElementById(blockID).scrollIntoView({\n                behavior: 'smooth',\n                block: 'start'\n            })\n        })\n    }\n}\n\n\nfunction mainSlider() {\n    const slider = new Swiper('.video-block__swiper', {\n        direction: 'horizontal',\n        effect: 'fade',\n        fadeEffect: {\n            crossFade: true\n        },  \n        loop: true,\n        slidesPerView: 1,\n        slidesToScroll: 1,\n        simulateTouch: true,\n        autoplay: false,\n        speed: 1000,\n        allowTouchMove: true,\n        // Pagination (числа вместо обычных буллетов)\n        pagination: {\n            el: '.video-block__pagination',\n            clickable: true,\n            renderBullet: function (index, className) {\n                // index — начинается с 0, поэтому +1\n                const number = index + 1;\n                return `<button class=\"${className}\" aria-label=\"Перейти к слайду ${number}\">${number}</button>`;\n            }\n        },\n        // Navigation (prev/next buttons)\n        navigation: {\n            nextEl: '.video-block__button-next',\n            prevEl: '.video-block__button-prev',\n        },\n    });\n}\n\nfunction universities() {\n    document.addEventListener('DOMContentLoaded', () => {\n        const universities = document.querySelectorAll('.university');\n        const startEl = document.querySelector('.university--start');\n\n        universities.forEach(university => {\n            university.addEventListener('click', () => {\n                universities.forEach(u => {\n                    u.classList.remove('open');\n                    const inset = u.querySelector('.university__inset');\n                    if (inset) inset.style.overflow = 'hidden';\n                });\n\n                university.classList.add('open');\n                const activeInset = university.querySelector('.university__inset');\n\n                if (activeInset) {\n                    // Сначала скрыто, потом через 0.5с делаем overflow: visible\n                    setTimeout(() => {\n                        activeInset.style.overflow = 'visible';\n                    }, 500);\n                }\n\n                if (startEl) startEl.style.display = 'none';\n            });\n        });\n    });\n    document.querySelectorAll('.university').forEach((el, i, all) => {\n        const prev = all[i - 1];\n\n        const handleChange = () => {\n            // если текущий элемент активен\n            if (el.classList.contains('open')) {\n            // и если есть предыдущий элемент\n            if (prev) {\n                const decor = prev.querySelector('.universities__decor--1');\n                decor?.classList.add('shifted');\n            }\n            } else {\n            // если open снят — убираем эффект\n            if (prev) {\n                const decor = prev.querySelector('.universities__decor--1');\n                decor?.classList.remove('shifted');\n            }\n            }\n        };\n\n        // наблюдаем за изменениями класса .open\n        const observer = new MutationObserver(handleChange);\n        observer.observe(el, { attributes: true, attributeFilter: ['class'] });\n        });\n\n}\n\nfunction factsPopup() {\n    document.addEventListener('DOMContentLoaded', () => {\n        const factItems = document.querySelectorAll('.facts__item');\n        const popup = document.querySelector('.facts__popup');\n        const facts = document.querySelectorAll('.fact');\n\n        // --- открыть popup ---\n        factItems.forEach(item => {\n            item.addEventListener('click', () => {\n                const factId = item.dataset.fact;\n                popup.classList.add('active');\n\n                facts.forEach(f => f.classList.remove('active'));\n                const activeFact = popup.querySelector(`.fact[data-popup=\"${factId}\"]`);\n                if (activeFact) activeFact.classList.add('active');\n            });\n        });\n\n        // --- закрытие popup (по крестику или фону) ---\n        popup.addEventListener('click', e => {\n            if (\n                e.target.classList.contains('fact__close') ||\n                e.target.classList.contains('facts__popup')\n            ) {\n                popup.classList.remove('active');\n                facts.forEach(f => f.classList.remove('active'));\n            }\n        });\n\n        // --- переключение на случайный факт ---\n        popup.addEventListener('click', e => {\n            if (e.target.classList.contains('fact__link')) {\n                const currentFact = e.target.closest('.fact');\n                if (!currentFact) return;\n\n                const currentId = currentFact.dataset.popup;\n                const totalFacts = facts.length;\n\n                let randomId;\n                do {\n                    randomId = Math.floor(Math.random() * totalFacts) + 1;\n                } while (randomId == currentId); // исключаем текущий\n\n                // закрываем текущий, открываем новый\n                currentFact.classList.remove('active');\n                const nextFact = popup.querySelector(`.fact[data-popup=\"${randomId}\"]`);\n                if (nextFact) nextFact.classList.add('active');\n            }\n        });\n    });\n}\n\n\n\n\n//# sourceURL=webpack://name/./src/js/modules/functions.js?\n}");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/js/app.js");
/******/ 	
/******/ })()
;